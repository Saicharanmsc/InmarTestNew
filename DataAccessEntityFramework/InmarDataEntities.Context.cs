//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessEntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestEntities : DbContext
    {
        public TestEntities()
            : base("name=TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<uspGet_AllCategoriesByLocationDepartment_Result> uspGet_AllCategoriesByLocationDepartment(Nullable<int> location_Id, Nullable<int> department_Id)
        {
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("Location_Id", location_Id) :
                new ObjectParameter("Location_Id", typeof(int));
    
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("Department_Id", department_Id) :
                new ObjectParameter("Department_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGet_AllCategoriesByLocationDepartment_Result>("uspGet_AllCategoriesByLocationDepartment", location_IdParameter, department_IdParameter);
        }
    
        public virtual ObjectResult<uspGet_AllDepartmentsByLocationId_Result> uspGet_AllDepartmentsByLocationId(Nullable<int> location_Id)
        {
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("Location_Id", location_Id) :
                new ObjectParameter("Location_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGet_AllDepartmentsByLocationId_Result>("uspGet_AllDepartmentsByLocationId", location_IdParameter);
        }
    
        public virtual ObjectResult<uspGet_AllLocations_Result> uspGet_AllLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGet_AllLocations_Result>("uspGet_AllLocations");
        }
    
        public virtual ObjectResult<uspGet_AllProductsByLocDeptCatSubCat_Result> uspGet_AllProductsByLocDeptCatSubCat(Nullable<int> location_Id, Nullable<int> department_Id, Nullable<int> category_Id, Nullable<int> subCategory_Id)
        {
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("Location_Id", location_Id) :
                new ObjectParameter("Location_Id", typeof(int));
    
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("Department_Id", department_Id) :
                new ObjectParameter("Department_Id", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGet_AllProductsByLocDeptCatSubCat_Result>("uspGet_AllProductsByLocDeptCatSubCat", location_IdParameter, department_IdParameter, category_IdParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<uspGet_AllSubCategoriesByLocDeptCategory_Result> uspGet_AllSubCategoriesByLocDeptCategory(Nullable<int> location_Id, Nullable<int> department_Id, Nullable<int> category_Id)
        {
            var location_IdParameter = location_Id.HasValue ?
                new ObjectParameter("Location_Id", location_Id) :
                new ObjectParameter("Location_Id", typeof(int));
    
            var department_IdParameter = department_Id.HasValue ?
                new ObjectParameter("Department_Id", department_Id) :
                new ObjectParameter("Department_Id", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGet_AllSubCategoriesByLocDeptCategory_Result>("uspGet_AllSubCategoriesByLocDeptCategory", location_IdParameter, department_IdParameter, category_IdParameter);
        }
    }
}
